public class GetCustomerResWrapper {

	
	public String type {get;set;} 
	public Data data {get;set;} 

	
	
	public class Data {
		public String id {get;set;} 
		public String statusId {get;set;} 
		public String name {get;set;} 
		public String classId {get;set;} 
		public String typeId {get;set;} 
		public String currencyTypeId {get;set;} 
		public String currencyTypeDescription {get;set;} 
		public Boolean forceCurrencyType {get;set;} 
		public Boolean cashOnlyCustomer {get;set;} 
		public String billingPrintedAddress {get;set;} 
		public String billingAddressTemplate {get;set;} 
		public String billingPhone {get;set;} 
		public String billingFax {get;set;} 
		public String billingContact_FirstName {get;set;} // in json: billingContact.FirstName
		public String billingContact_MiddleName {get;set;} // in json: billingContact.MiddleName
		public String billingContact_LastName {get;set;} // in json: billingContact.LastName
		public String billingContact_Title {get;set;} // in json: billingContact.Title
		public String billingContact_Position {get;set;} // in json: billingContact.Position
		public String billingContact_EmailAddress {get;set;} // in json: billingContact.EmailAddress
		public Boolean creditHold {get;set;} 
		public Boolean printSeparateChecksForEachInvoice {get;set;} 
		public String customerComment {get;set;} 
		public Double firstDiscount {get;set;} 
		public Integer firstDiscountDaysAvailable {get;set;} 
		public Double secondDiscount {get;set;} 
		public Integer secondDiscountDaysAvailable {get;set;} 
		public Integer daysUntilNetAmountDue {get;set;} 
		public String defaultRevenueAccountId {get;set;} 
		public String defaultRevenueAccountTitle {get;set;} 
		public String defaultPrepaymentAccountId {get;set;} 
		public String defaultPrepaymentAccountTitle {get;set;} 
		public String distributionCodeId {get;set;} 
		public String distributionCodeTitle {get;set;} 
		public String defaultAccountsReceivableAccountId {get;set;} 
		public String defaultAccountsReceivableAccountTitle {get;set;} 
		public String defaultGeneralLedgerAccountId {get;set;} 
		public String defaultGeneralLedgerAccountTitle {get;set;} 
		public String website {get;set;} 
		public String resaleTaxId {get;set;} 
		public String notes {get;set;} 
		public String serviceAddressSameAsId {get;set;} 
		public String serviceAddress_Line {get;set;} // in json: serviceAddress.Line
		public String serviceAddress_City {get;set;} // in json: serviceAddress.City
		public String serviceAddress_State {get;set;} // in json: serviceAddress.State
		public String serviceAddress_PostalCode {get;set;} // in json: serviceAddress.PostalCode
		public String serviceAddress_Country {get;set;} // in json: serviceAddress.Country
		public String servicePrintedAddress {get;set;} 
		public String serviceAddressTemplate {get;set;} 
		public String serviceAddressPhone {get;set;} 
		public String serviceAddressFax {get;set;} 
		public String serviceContact_FirstName {get;set;} // in json: serviceContact.FirstName
		public String serviceContact_MiddleName {get;set;} // in json: serviceContact.MiddleName
		public String serviceContact_LastName {get;set;} // in json: serviceContact.LastName
		public String serviceContact_Title {get;set;} // in json: serviceContact.Title
		public String serviceContact_Position {get;set;} // in json: serviceContact.Position
		public String serviceContact_EmailAddress {get;set;} // in json: serviceContact.EmailAddress
		public String defaultShippingAddressCodeId {get;set;} 
		public Boolean taxable {get;set;} 
		public Boolean applyFinanceCharges {get;set;} 
		public Boolean emailInvoice {get;set;} 
		public Boolean printInvoice {get;set;} 
		public String invoiceEmailAddress {get;set;} 
		public String invoiceProcessTemplate {get;set;} 
		public Boolean emailStatement {get;set;} 
		public Boolean printStatement {get;set;} 
		public String statementEmailAddress {get;set;} 
		public String statementEmailTemplate {get;set;} 
		public Boolean customerInUse {get;set;} 
		public String customerGuid {get;set;} 
		public String customerAddDate {get;set;} 
		public String customerUpdateDate {get;set;} 
		public String customerAddUser {get;set;} 
		public String customerUpdateUser {get;set;} 
		public Addresses addresses {get;set;} 

		
	public class Main {
		public String billingAddress_Line {get;set;} // in json: billingAddress.Line
		public String billingAddress_City {get;set;} // in json: billingAddress.City
		public String billingAddress_State {get;set;} // in json: billingAddress.State
		public String billingAddress_PostalCode {get;set;} // in json: billingAddress.PostalCode
		public String billingAddress_Country {get;set;} // in json: billingAddress.Country

		public Main(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'billingAddress.Line') {
							billingAddress_Line = parser.getText();
						} else if (text == 'billingAddress.City') {
							billingAddress_City = parser.getText();
						} else if (text == 'billingAddress.State') {
							billingAddress_State = parser.getText();
						} else if (text == 'billingAddress.PostalCode') {
							billingAddress_PostalCode = parser.getText();
						} else if (text == 'billingAddress.Country') {
							billingAddress_Country = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Main consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static GetCustomerResWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new GetCustomerResWrapper(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	








}